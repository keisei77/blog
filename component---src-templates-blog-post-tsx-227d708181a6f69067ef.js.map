{"version":3,"sources":["webpack:///./src/templates/blog-post.tsx","webpack:///./src/components/tag.tsx"],"names":["BlogPostTemplate","props","post","data","markdownRemark","siteTitle","site","siteMetadata","title","pageContext","tags","slug","previous","next","location","frontmatter","description","excerpt","style","marginBottom","display","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","rel","pageQuery","StyledLink","styled","Link","StyledPre","pre","tagsLength","showBorder","StyledLabel","label","showLabel","Tag","length","map","tag","key"],"mappings":"2FAAA,0HAwEeA,UAjEU,SAACC,GACxB,IAAMC,EAAOD,EAAME,KAAKC,eAClBC,EAAYJ,EAAME,KAAKG,KAAKC,aAAaC,MAFR,EAGAP,EAAMQ,YAA/BC,GAHyB,EAG/BC,KAH+B,EAGzBD,MAAME,EAHmB,EAGnBA,SAAUC,EAHS,EAGTA,KAC9B,OACE,kBAAC,IAAD,CAAQC,SAAUb,EAAMa,SAAUN,MAAOH,GACvC,oCACE,kBAAC,IAAD,CACEG,MAAON,EAAKa,YAAYP,MACxBQ,YAAad,EAAKa,YAAYC,aAAed,EAAKe,UAEpD,iCACE,gCACE,wBACEC,MAAO,CACLC,aAAc,IAGfjB,EAAKa,YAAYP,OAEpB,uBACEU,MAAO,CACLE,QAAS,UAGVlB,EAAKa,YAAYM,OAGtB,6BAASC,wBAAyB,CAAEC,OAAQrB,EAAKsB,QACjD,gCACE,kBAAC,IAAD,CAAKd,KAAMA,MAIf,6BACE,wBACEQ,MAAO,CACLE,QAAS,OACTK,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,4BACGhB,GACC,kBAAC,OAAD,CAAMiB,GAAIjB,EAASkB,OAAOnB,KAAMoB,IAAI,QAApC,KACKnB,EAASG,YAAYP,QAI9B,4BACGK,GACC,kBAAC,OAAD,CAAMgB,GAAIhB,EAAKiB,OAAOnB,KAAMoB,IAAI,QAC7BlB,EAAKE,YAAYP,MADpB,YAcT,IAAMwB,EAAY,c,oCC1EzB,iDAIMC,EAAaC,YAAOC,QAAV,qEAAGD,CAAH,6RAmBVE,EAAYF,IAAOG,IAAV,oEAAGH,CAAH,sFACF,SAAAjC,GAAK,OAAKA,EAAMqC,WAAa,OAAS,UAGnC,SAAArC,GAAK,OAAKA,EAAMsC,WAAa,oBAAsB,UAI7DC,EAAcN,IAAOO,MAAV,sEAAGP,CAAH,oCAEJ,SAAAjC,GAAK,OAAKA,EAAMyC,UAAY,OAAS,UA0BnCC,IAfH,SAAC1C,GAAoB,MACsCA,EAA7DiB,aADuB,MACf,CAAEqB,YAAY,EAAMG,WAAW,GADhB,IACsCzC,EAAdS,YADxB,MAC+B,GAD/B,EAE/B,OACE,kBAAC0B,EAAD,CAAWG,WAAYrB,EAAMqB,WAAYD,WAAY5B,EAAKkC,QACxD,kBAACJ,EAAD,CAAaE,UAAWxB,EAAMwB,WAA9B,OAEChC,EAAKmC,KAAI,SAACC,GAAD,OACR,kBAACb,EAAD,CAAYc,IAAKD,EAAKjB,GAAE,SAAWiB,GAChCA","file":"component---src-templates-blog-post-tsx-227d708181a6f69067ef.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Tag from '../components/tag';\n\nconst BlogPostTemplate = (props: any) => {\n  const post = props.data.markdownRemark;\n  const siteTitle = props.data.site.siteMetadata.title;\n  const { slug, tags, previous, next } = props.pageContext;\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <article>\n          <header>\n            <h1\n              style={{\n                marginBottom: 0,\n              }}\n            >\n              {post.frontmatter.title}\n            </h1>\n            <p\n              style={{\n                display: `block`,\n              }}\n            >\n              {post.frontmatter.date}\n            </p>\n          </header>\n          <section dangerouslySetInnerHTML={{ __html: post.html }} />\n          <footer>\n            <Tag tags={tags} />\n          </footer>\n        </article>\n\n        <nav>\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </>\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  text-align: center;\n  color: #fff;\n  margin-right: 0.5rem;\n  padding: 0.25rem 0.5rem;\n  display: inline-block;\n  border-radius: 0.875rem;\n  height: 1rem;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  line-height: 1rem;\n  transition: opacity 0.1s ease-in-out;\n  background: #a1c4fd;\n  margin-top: 0.5rem;\n  &:hover {\n    opacity: 0.85;\n  }\n`;\n\nconst StyledPre = styled.pre<{ tagsLength: number; showBorder: boolean }>`\n  display: ${props => (props.tagsLength ? 'flex' : 'none')};\n  align-items: center;\n  flex-wrap: wrap;\n  border-top: ${props => (props.showBorder ? '1px solid #a1c4fd' : 'none')};\n  padding-top: 0.5rem;\n`;\n\nconst StyledLabel = styled.label<{ showLabel: boolean }>`\n  margin-top: 0.5rem;\n  display: ${props => (props.showLabel ? 'flex' : 'none')};\n`;\n\ninterface TagProps {\n  tags: string[];\n  style?: {\n    showBorder: boolean;\n    showLabel: boolean;\n  };\n}\n\nconst Tag = (props: TagProps) => {\n  const { style = { showBorder: true, showLabel: true }, tags = [] } = props;\n  return (\n    <StyledPre showBorder={style.showBorder} tagsLength={tags.length}>\n      <StyledLabel showLabel={style.showLabel}>标签：</StyledLabel>\n      {/* TODO: 这里应该跳转到tag详情页，该页显示相关tag的article列表 */}\n      {tags.map((tag: string) => (\n        <StyledLink key={tag} to={`/tags/${tag}`}>\n          {tag}\n        </StyledLink>\n      ))}\n    </StyledPre>\n  );\n};\n\nexport default Tag;\n"],"sourceRoot":""}