{"version":3,"sources":["webpack:///./src/components/tag.tsx","webpack:///./src/templates/blog-post.js"],"names":["StyledLink","styled","Link","StyledPre","pre","props","tagsLength","Tag","slug","tags","length","map","tag","to","BlogPostTemplate","render","post","this","data","markdownRemark","siteTitle","site","siteMetadata","title","pageContext","previous","next","location","frontmatter","description","excerpt","style","marginBottom","display","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","fields","rel","React","Component","pageQuery"],"mappings":"2KAKMA,EAAaC,YAAOC,QAAV,qEAAGD,CAAH,2QAkBVE,EAAYF,IAAOG,IAAV,oEAAGH,CAAH,mFACF,SAAAI,GAAK,OAAKA,EAAMC,WAAa,OAAS,UAwBpCC,EAbH,SAACF,GAAoB,IACvBG,EAAoBH,EAApBG,KADuB,EACHH,EAAdI,YADiB,MACV,GADU,EAE/B,OACE,kBAACN,EAAD,CAAWG,WAAYG,EAAKC,QAC1B,qCAECD,EAAKE,KAAI,SAACC,GAAD,OACR,kBAACZ,EAAD,CAAYa,GAAIL,GAAOI,Q,8CCnCzBE,E,gLACJC,OAAA,WACE,IAAMC,EAAOC,KAAKZ,MAAMa,KAAKC,eACvBC,EAAYH,KAAKZ,MAAMa,KAAKG,KAAKC,aAAaC,MAF7C,EAGgCN,KAAKZ,MAAMmB,YAA1ChB,EAHD,EAGCA,KAAMC,EAHP,EAGOA,KAAMgB,EAHb,EAGaA,SAAUC,EAHvB,EAGuBA,KAE9B,OACE,kBAAC,IAAD,CAAQC,SAAUV,KAAKZ,MAAMsB,SAAUJ,MAAOH,GAC5C,kBAAC,IAAD,CACEG,MAAOP,EAAKY,YAAYL,MACxBM,YAAab,EAAKY,YAAYC,aAAeb,EAAKc,UAEpD,iCACE,gCACE,wBACEC,MAAO,CACLC,aAAc,IAGfhB,EAAKY,YAAYL,OAEpB,uBACEQ,MAAO,CACLE,QAAQ,UAGTjB,EAAKY,YAAYM,OAGtB,6BAASC,wBAAyB,CAAEC,OAAQpB,EAAKqB,QACjD,gCACE,kBAAC,EAAD,CAAK7B,KAAMA,EAAMC,KAAMA,MAI3B,6BACE,wBACEsB,MAAO,CACLE,QAAQ,OACRK,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGhB,GACC,kBAAC,OAAD,CAAMZ,GAAIY,EAASiB,OAAOlC,KAAMmC,IAAI,QAApC,KACKlB,EAASG,YAAYL,QAI9B,4BACGG,GACC,kBAAC,OAAD,CAAMb,GAAIa,EAAKgB,OAAOlC,KAAMmC,IAAI,QAC7BjB,EAAKE,YAAYL,MADpB,W,GAtDeqB,IAAMC,WAoExBC,GAFEhC,YAEO","file":"component---src-templates-blog-post-js-f70d4a7ee994f958378c.js","sourcesContent":["import React from 'react';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  text-align: center;\n  color: #fff;\n  margin-right: 0.5rem;\n  padding: 0.25rem 0.5rem;\n  display: inline-block;\n  border-radius: 0.875rem;\n  height: 1rem;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  line-height: 1rem;\n  transition: opacity 0.1s ease-in-out;\n  background: #a1c4fd;\n  &:hover {\n    opacity: 0.85;\n  }\n`;\n\nconst StyledPre = styled.pre<{ tagsLength: number }>`\n  display: ${props => (props.tagsLength ? 'flex' : 'none')};\n  align-items: center;\n  border-top: 1px solid #a1c4fd;\n  padding-top: 1rem;\n`;\n\ninterface TagProps {\n  slug: string;\n  tags: string[];\n}\n\nconst Tag = (props: TagProps) => {\n  const { slug, tags = [] } = props;\n  return (\n    <StyledPre tagsLength={tags.length}>\n      <span>标签：</span>\n      {/* TODO: 这里应该跳转到tag详情页，该页显示相关tag的article列表 */}\n      {tags.map((tag: string) => (\n        <StyledLink to={slug}>{tag}</StyledLink>\n      ))}\n    </StyledPre>\n  );\n};\n\nexport default Tag;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Tag from '../components/tag';\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n    const { slug, tags, previous, next } = this.props.pageContext;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <article>\n          <header>\n            <h1\n              style={{\n                marginBottom: 0,\n              }}\n            >\n              {post.frontmatter.title}\n            </h1>\n            <p\n              style={{\n                display: `block`,\n              }}\n            >\n              {post.frontmatter.date}\n            </p>\n          </header>\n          <section dangerouslySetInnerHTML={{ __html: post.html }} />\n          <footer>\n            <Tag slug={slug} tags={tags} />\n          </footer>\n        </article>\n\n        <nav>\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n        </nav>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}