{"version":3,"sources":["webpack:///./src/components/tags.tsx","webpack:///./src/pages/tags/index.tsx","webpack:///./src/components/tag.tsx"],"names":["Tags","posts","allMarkdownRemark","nodes","tagsSet","Set","forEach","frontmatter","fields","tags","tag","add","uniqueTags","Array","from","style","showBorder","showLabel","props","siteTitle","site","siteMetadata","title","location","StyledLink","styled","Link","StyledPre","pre","tagsLength","StyledLabel","label","Tag","length","map","key","to"],"mappings":"mVA2CeA,EAhCF,WACX,IAeMC,EAfO,OAeMC,kBAAkBC,MAC/BC,EAAU,IAAIC,IACpBJ,EAAMK,SAAQ,YAAkC,IAA/BC,EAA+B,EAA/BA,YAA+B,EAAlBC,OACXD,EAATE,KACHH,SAAQ,SAACI,GACZN,EAAQO,IAAID,SAGhB,IAIME,EAAaC,MAAMC,KAAKV,GAC9B,OAAO,kBAAC,IAAD,CAAKW,MALK,CACfC,YAAY,EACZC,WAAW,GAGgBR,KAAMG,KCLtBZ,UAtBF,SAACkB,GACZ,IAUMC,EAVO,OAUUC,KAAKC,aAAaC,MACzC,OACE,kBAAC,IAAD,CAAQC,SAAUL,EAAMK,SAAUD,MAAOH,GACvC,oCACE,kBAAC,IAAD,CAAKG,MAAM,kBACX,kBAAC,EAAD,U,m3CC7BR,iDAIME,EAAaC,YAAOC,QAAV,qEAAGD,CAAH,6RAmBVE,EAAYF,IAAOG,IAAV,oEAAGH,CAAH,sFACF,SAAAP,GAAK,OAAKA,EAAMW,WAAa,OAAS,UAGnC,SAAAX,GAAK,OAAKA,EAAMF,WAAa,oBAAsB,UAI7Dc,EAAcL,IAAOM,MAAV,sEAAGN,CAAH,oCAEJ,SAAAP,GAAK,OAAKA,EAAMD,UAAY,OAAS,UA0BnCe,IAfH,SAACd,GAAoB,MACsCA,EAA7DH,aADuB,MACf,CAAEC,YAAY,EAAMC,WAAW,GADhB,IACsCC,EAAdT,YADxB,MAC+B,GAD/B,EAE/B,OACE,kBAACkB,EAAD,CAAWX,WAAYD,EAAMC,WAAYa,WAAYpB,EAAKwB,QACxD,kBAACH,EAAD,CAAab,UAAWF,EAAME,WAA9B,OAECR,EAAKyB,KAAI,SAACxB,GAAD,OACR,kBAACc,EAAD,CAAYW,IAAKzB,EAAK0B,GAAE,SAAW1B,GAChCA","file":"component---src-pages-tags-index-tsx-eaa26561561a2416a715.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport Tag from './tag';\n\nconst Tags = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark {\n        nodes {\n          frontmatter {\n            tags\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  `);\n\n  const posts = data.allMarkdownRemark.nodes;\n  const tagsSet = new Set<string>();\n  posts.forEach(({ frontmatter, fields }: any) => {\n    const { tags } = frontmatter;\n    tags.forEach((tag: string) => {\n      tagsSet.add(tag);\n    });\n  });\n  const tagStyle = {\n    showBorder: false,\n    showLabel: false,\n  };\n  const uniqueTags = Array.from(tagsSet);\n  return <Tag style={tagStyle} tags={uniqueTags} />;\n};\n\nexport default Tags;\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport SEO from '../../components/seo';\nimport Layout from '../../components/layout';\nimport TagsComponent from '../../components/tags';\n\nconst Tags = (props: any) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  const siteTitle = data.site.siteMetadata.title;\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <>\n        <SEO title=\"Keisei's Blog\" />\n        <TagsComponent />\n      </>\n    </Layout>\n  );\n};\n\nexport default Tags;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  text-align: center;\n  color: #fff;\n  margin-right: 0.5rem;\n  padding: 0.25rem 0.5rem;\n  display: inline-block;\n  border-radius: 0.875rem;\n  height: 1rem;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  line-height: 1rem;\n  transition: opacity 0.1s ease-in-out;\n  background: #74d2ff;\n  margin-top: 0.5rem;\n  &:hover {\n    opacity: 0.85;\n  }\n`;\n\nconst StyledPre = styled.pre<{ tagsLength: number; showBorder: boolean }>`\n  display: ${props => (props.tagsLength ? 'flex' : 'none')};\n  align-items: center;\n  flex-wrap: wrap;\n  border-top: ${props => (props.showBorder ? '1px solid #74d2ff' : 'none')};\n  padding-top: 0.5rem;\n`;\n\nconst StyledLabel = styled.label<{ showLabel: boolean }>`\n  margin-top: 0.5rem;\n  display: ${props => (props.showLabel ? 'flex' : 'none')};\n`;\n\ninterface TagProps {\n  tags: string[];\n  style?: {\n    showBorder: boolean;\n    showLabel: boolean;\n  };\n}\n\nconst Tag = (props: TagProps) => {\n  const { style = { showBorder: true, showLabel: true }, tags = [] } = props;\n  return (\n    <StyledPre showBorder={style.showBorder} tagsLength={tags.length}>\n      <StyledLabel showLabel={style.showLabel}>标签：</StyledLabel>\n      {/* TODO: 这里应该跳转到tag详情页，该页显示相关tag的article列表 */}\n      {tags.map((tag: string) => (\n        <StyledLink key={tag} to={`/tags/${tag}`}>\n          {tag}\n        </StyledLink>\n      ))}\n    </StyledPre>\n  );\n};\n\nexport default Tag;\n"],"sourceRoot":""}