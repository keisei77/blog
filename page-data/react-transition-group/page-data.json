{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/react-transition-group/","result":{"data":{"site":{"siteMetadata":{"title":"学习随笔"}},"markdownRemark":{"id":"8e327f27-d486-54c8-8185-79fbc411dd68","excerpt":"前言 笔者最近在做移动端的项目，项目经理某天给我发了一个链接panel-stack，我试用了一下感觉蛮不错的，每层（stack）切换时非常丝滑。在我们的项目中，针对路由做了一层包装，当用户点击链接时，我们会在dom上append…","html":"<h3>前言</h3>\n<p>笔者最近在做移动端的项目，项目经理某天给我发了一个链接<a href=\"https://blueprintjs.com/docs/#core/components/panel-stack\">panel-stack</a>，我试用了一下感觉蛮不错的，每层（stack）切换时非常丝滑。在我们的项目中，针对路由做了一层包装，当用户点击链接时，我们会在dom上append该链接指向页面的节点，而原页面的节点不会被销毁。这样做的好处是，可以记住原页面的滚动位置、交互状态，但不好的地方是用户刷新页面时只会记录最近一个链接，这样之前的元素就丢失了。</p>\n<p>简单的路由实现：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token constant\">TODO</span><span class=\"token punctuation\">:</span> </code></pre></div>","frontmatter":{"title":"React 过渡","date":"June 01, 2020","description":"通过研究 react-transition-group 库来了解react中如何实现丝滑的过渡效果"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"tags":["React","transition"],"slug":"/react-transition-group/","previous":null,"next":{"excerpt":"概述 插件架构宏观上来讲就是一种框架能够在确定的点上执行外部的代码，而不需要提前知道这部分代码的细节。 它既可以很简单，也可以很复杂。我们可以编写 webpack 插件，也可以开发 vs code…","fields":{"slug":"/plugin-mechanism/"},"frontmatter":{"date":"May 12, 2020","description":"前端工具如今基本都提供了插件机制，尤其以webpack著称，那么这种机制是如何实现的呢？","title":"前端插件机制的探索","tags":["plugin mechanism"]}}}}}