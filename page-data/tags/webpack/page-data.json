{"componentChunkName":"component---src-templates-single-tag-tsx","path":"/tags/webpack","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"posts":[{"node":{"excerpt":"背景 最近在公司做移动端项目优化的工作，目前主要的重心放在了打包体积优化上。目前项目中采用了 webpack 4，实际上已经为我们提供了诸多方便的配置能力进行打包优化。 抽离 webpack 运行时代码 将 optimization.runtimeChunk 设置为 true…","fields":{"slug":"/webpack-inline-runtime-chunk/"},"frontmatter":{"date":"October 13, 2020","description":"将 webpack 运行时代码抽到单独的文件，并内嵌至 index.html 中","title":"webpack 内联 runtimeChunk 至index.html","tags":["webpack"]}}},{"node":{"excerpt":"背景 最近几个月的工作都以移动端为主，主要的工作内容是将 PC 端已有的核心业务移植到 Mobile…","fields":{"slug":"/watch-external-files-webpack-plugin/"},"frontmatter":{"date":"September 10, 2020","description":"本文将介绍当需要根据外部文件变更触发编译时，如何通过编写插件来解决该问题。","title":"webpack 监听外部文件变更","tags":["webpack","plugin"]}}},{"node":{"excerpt":"模板打包器把小的代码片段转译成可在浏览器中运行的更大更复杂的文件。这些代码片段都是 JavaScript 文件，所有代码间的依赖都由模块系统来表示（https://webpack.js.org/concepts/modules…","fields":{"slug":"/minipack/"},"frontmatter":{"date":"December 25, 2019","description":"精简版打包工具，领略内部实现之巧","title":"【译】迷你打包工具","tags":["minipack","webpack"]}}},{"node":{"excerpt":"简介 现代化的前端应用离不开打包工具，从早期人们所熟知的 Grunt, Gulp 到现在炙手可热的 webpack, rollup 等，这些工具的崛起使得我们的代码构建更加方便，通过 Loader，插件等机制我们可以应用最新的技术，如新语法，预处理 CSS（Scss, Less…","fields":{"slug":"/webpack-behind-the-scene/"},"frontmatter":{"date":"December 04, 2019","description":"本文主要介绍了对webpack的初步认识以及内部的工作原理。","title":"【译】webpack 基本原理","tags":["webpack"]}}}],"tagName":"webpack"}}}