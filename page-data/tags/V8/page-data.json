{"componentChunkName":"component---src-templates-single-tag-tsx","path":"/tags/V8","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"posts":[{"node":{"excerpt":"本文我们来看一下用于ECMAScript和WebAssembly的V8 引擎的内存管理。V8 引擎现在被 NodeJS，Deno 等运行时，Electron，还有 Chrome，Chromium，Brave，Opera 和 Microsoft Edge…","fields":{"slug":"/architecture-of-v8-memory/"},"frontmatter":{"date":"February 24, 2020","description":"对V8的内存管理加以了解","title":"了解 V8 内存管理","tags":["V8","Garbage Collection"]}}},{"node":{"excerpt":"JavaScript 引擎管道 当加载到我们所写的 JavaScript 代码，JavaScript 引擎开始解析源代码，并把它转换成抽象语法树（AST）。基于 AST，解释器开始工作并转换成字节码。此时引擎开始真正执行我们的 JavaScript 代码。 js engine…","fields":{"slug":"/V8-shapes-and-inline-cache/"},"frontmatter":{"date":"November 18, 2019","description":"了解 JavaScript 引擎基本的工作原理，可以帮助我们写出更加高性能的代码。","title":"JavaScript 引擎基础：Shapes 和 Inline Caches","tags":["javascript engines","V8","shapes","inline caches","fundamentals"]}}},{"node":{"excerpt":"JavaScript 类型 JavaScript 的值总共具有 8 种不同的类型： 可以通过  关键字来校验值的类型。 尽管  有着它自身的一种类型，但  却返回  而不是  。为了理解原因，我们首先把所有的类型分为两组： object (即  类型) primitives…","fields":{"slug":"/V8-performance-cliff/"},"frontmatter":{"date":"November 14, 2019","description":"本文主要讲述了V8如何在内存中表示JavaScript类型，并且是如何影响Shape机制的，这将会为我们解释近期发现的一个React核心代码中的性能问题。","title":"React源码中导致V8性能断崖下滑的真相","tags":["React","V8","representations","optimize"]}}}],"tagName":"V8"}}}